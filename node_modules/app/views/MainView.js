var View = require("app/views/View");

class MainView extends View
{
	constructor(model, loadController) {
		super();
		MainView.instance = this;
		var me = this;

		me._loadController = loadController;

		me.popupManager = new PopupManager();

		me.tabControl = me.addChild(new TabControl());
		me.tabControl.addTab(Tab.Grid, "Шахматка");
		me.tabControl.addTab(Tab.Sql, "SQL");

		me.gridView = me.addChild(new GridView(model));
		me.sqlView = me.addChild(new SqlView(model.sqlModel));

		me.tabControl.activeId(Tab.Grid);
		me.sqlView.setVisible(false);

		me.tabControl.onActiveIdChanged.bind(function() {
			var id = me.tabControl.activeId();
			me.gridView.setVisible(id == Tab.Grid);
			me.sqlView.setVisible(id == Tab.Sql);
		});
	}
	getHtml() {
		return `
			<div id="${this.uid}" class="mainview">
				<ul id="${this.uid + "_messages"}"></ul>
				<button id="${this.uid + "_reload"}">Перезагрузить</button>
				${this.tabControl.getHtml()}
				${this.gridView.getHtml()}
				${this.sqlView.getHtml()}
			</div>
		`;
	}
	onInstalled() {
		super.onInstalled(...arguments);
		var me = this;

		this.$element().find("#" + this.uid + "_reload").click(function() {
			me.load();
		});
	}
	init() {
		this.load();
	}
	load() {
		var $messages = this.$element().find("#" + this.uid + "_messages");
		$messages.empty();
		this._loadController.load().then(null, function(ex) {
			$messages.html("<li>" + utils.htmlEncode(ex.message) + "</li>");
		});
	}
}
MainView.instance = null;

var Tab = {
	Grid: 1,
	Sql: 2,
};

module.exports = MainView;

var utils = require("app/utils");
var TabControl = require("app/views/TabControl");
var GridView = require("app/views/GridView");
var SqlView = require("app/views/SqlView");
var PopupManager = require("app/views/PopupManager");
