var View = require("app/views/View");

class LoadView extends View
{
	constructor(model) {
		super();
		this._model = model;
	}
	getHtml() {
		return `
			<div class="LoadView" id="${this.uid}">
				<button>Использовать стандартную выписку</button> | <input type="file">
				<div id="${this.uid + "_messages"}"></div>
			</div>
		`;
	}
	onInstalled() {
		super.onInstalled(...arguments);

		var me = this;
		me.$element().find("button").click(function() {
			me._loadStd();
		});
	}
	_loadStd() {
		var me = this;
		$.get("std.csv")
			.done(function(csv) {
				try {
					me._model.loadCsv(csv);
				}
				catch (ex) {
					me._reportError(ex);
					return;
				}
				me._reportSuccess();
			})
			.fail(function() {
				me._reportFailure("Ошибка загрузки стандартной выписки.  Проверьте наличие соединения с Интернетом.");
			});
	}
	_reportSuccess() {
		this._reportMessage("Данные загружены", "success");
	}
	_reportFailure(message) {
		this._reportMessage(message, "error");
	}
	_reportError(ex) {
		console.error(ex);
		this._reportFailure(ex.message);
	}
	_reportMessage(message, cssClass) {
		var $messages = this.$element().find("#" + this.uid + "_messages");
		$messages.removeClass("success").removeClass("error").addClass(cssClass);
		$messages.text(message);
	}
}

module.exports = LoadView;
